/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.57
 * Generated at: 2016-01-14 17:35:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class excel_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <link rel=\"stylesheet\" href=\"../css/bootstrap.min.css\">   \t\t\n");
      out.write("        <script src=\"../js/bootstrap.min.js\"></script>    \n");
      out.write("        <script src=\"../js/handsontable-master/dist/handsontable.full.js\"> </script>\n");
      out.write("        <link rel=\"stylesheet\" media=\"screen\" href=\"../js/handsontable-master/dist/handsontable.full.css\">   \n");
      out.write("        <script src=\"../js/adamwdraper-Numeral-js-7487acb/min/numeral.min.js\"></script>\n");
      out.write("        <script src=\"../js/moment.js\"></script>\n");
      out.write("        <script src=\"../js/handsontable-master/dist/zeroclipboard/ZeroClipboard.js\"> </script>\n");
      out.write("    <!-- <script src=\"//handsontable.com/dist/handsontable.full.js\"></script>\n");
      out.write("    <link rel=\"stylesheet\" media=\"screen\" href=\"//handsontable.com/dist/handsontable.full.css\">  -->\n");
      out.write("    </head>\n");
      out.write("\n");
      out.write("    <body>         \n");
      out.write("        \n");
      out.write("        <label class=\"control-label\">Select File</label>\n");
      out.write("<input id=\"input-7\" name=\"input7[]\" multiple type=\"file\" class=\"file file-loading\" data-allowed-file-extensions='[\"csv\", \"txt\"]'>\n");
      out.write("        \n");
      out.write("        <div id=\"example1\" class=\"hot handsontable htRowHeaders htColumnHeaders\" style=\"height: 320px; width: 584px; overflow: hidden;\" data-originalstyle=\"height: 320px; width: 584px; overflow: hidden;\"></div>\n");
      out.write("        <script>\n");
      out.write("\n");
      out.write("        document.addEventListener(\"DOMContentLoaded\", function() {\n");
      out.write("        \tvar $$ = function(id) {\n");
      out.write("        \t\treturn document.getElementById(id);\n");
      out.write("        \t},\n");
      out.write("        \tcontainer = $$('example1'),\n");
      out.write("        \texampleConsole = $$('example1console'),\n");
      out.write("        \tautosave = $$('autosave'),\n");
      out.write("        \tload = $$('load'),\n");
      out.write("        \tsave = $$('save'),\n");
      out.write("            autosaveNotification,\n");
      out.write("            hot;\n");
      out.write("        \t\n");
      out.write("        \thot = new Handsontable(container, {\n");
      out.write("        \t    startRows: 8,\n");
      out.write("        \t    startCols: 6,\n");
      out.write("        \t    rowHeaders: true,\n");
      out.write("        \t    colHeaders: true,\n");
      out.write("        \t    afterChange: function (change, source) {\n");
      out.write("        \t      if (source === 'loadData') {\n");
      out.write("        \t        return; //don't save this change\n");
      out.write("        \t      }\n");
      out.write("        \t      if (!autosave.checked) {\n");
      out.write("        \t        return;\n");
      out.write("        \t      }\n");
      out.write("        \t      clearTimeout(autosaveNotification);\n");
      out.write("        \t      ajax('scripts/json/save.json', 'GET', JSON.stringify({data: change}), function (data) {\n");
      out.write("        \t        exampleConsole.innerText  = 'Autosaved (' + change.length + ' ' + 'cell' + (change.length > 1 ? 's' : '') + ')';\n");
      out.write("        \t        autosaveNotification = setTimeout(function() {\n");
      out.write("        \t          exampleConsole.innerText ='Changes will be autosaved';\n");
      out.write("        \t        }, 1000);\n");
      out.write("        \t      });\n");
      out.write("        \t    }\n");
      out.write("        \t  });\n");
      out.write("\n");
      out.write("        \t  Handsontable.Dom.addEvent(load, 'click', function() {\n");
      out.write("        \t    ajax('scripts/json/load.json', 'GET', '', function(res) {\n");
      out.write("        \t      var data = JSON.parse(res.response);\n");
      out.write("\n");
      out.write("        \t      hot.loadData(data.data);\n");
      out.write("        \t      exampleConsole.innerText = 'Data loaded';\n");
      out.write("        \t    });\n");
      out.write("        \t  });\n");
      out.write("\n");
      out.write("        \t  Handsontable.Dom.addEvent(save, 'click', function() {\n");
      out.write("        \t    // save all cell's data\n");
      out.write("        \t    ajax('scripts/json/save.json', 'GET', JSON.stringify({data: hot.getData()}), function (res) {\n");
      out.write("        \t      var response = JSON.parse(res.response);\n");
      out.write("\n");
      out.write("        \t      if (response.result === 'ok') {\n");
      out.write("        \t        exampleConsole.innerText = 'Data saved';\n");
      out.write("        \t      }\n");
      out.write("        \t      else {\n");
      out.write("        \t        exampleConsole.innerText = 'Save error';\n");
      out.write("        \t      }\n");
      out.write("        \t    });\n");
      out.write("        \t  });\n");
      out.write("\n");
      out.write("        \t  Handsontable.Dom.addEvent(autosave, 'click', function() {\n");
      out.write("        \t    if (autosave.checked) {\n");
      out.write("        \t      exampleConsole.innerText = 'Changes will be autosaved';\n");
      out.write("        \t    }\n");
      out.write("        \t    else {\n");
      out.write("        \t      exampleConsole.innerText ='Changes will not be autosaved';\n");
      out.write("        \t    }\n");
      out.write("        \t  });\n");
      out.write("\n");
      out.write("        \t\n");
      out.write("        \t  /* var\n");
      out.write("        \t    example = document.getElementById('example1'),\n");
      out.write("        \t    hot1;\n");
      out.write("        \t  \n");
      out.write("        \t  hot1 = new Handsontable(example,{\n");
      out.write("        \t    data: Handsontable.helper.createSpreadsheetData(100, 100),\n");
      out.write("        \t    width: 500,\n");
      out.write("        \t    height: 320,\n");
      out.write("        \t    colWidths: 47,\n");
      out.write("        \t    rowHeights: 23,\n");
      out.write("        \t    rowHeaders: true,\n");
      out.write("        \t    colHeaders: true,\n");
      out.write("        \t    \tfixedRowsTop: 1,\n");
      out.write("        \t    \tmanualColumnResize: true,\n");
      out.write("        \t    \tmanualRowResize: true,\n");
      out.write("        \t    \tmanualColumnMove: true,\n");
      out.write("        \t    \tmanualRowMove: true,\n");
      out.write("        \t    \tcolumnSorting: true,\n");
      out.write("        \t    \tsortIndicator: true\n");
      out.write("        \t    \t\n");
      out.write("        \t  });\n");
      out.write("        \t  \n");
      out.write("        \t  function bindDumpButton() {\n");
      out.write("        \t      if (typeof Handsontable === \"undefined\") {\n");
      out.write("        \t        return;\n");
      out.write("        \t      }\n");
      out.write("        \t  \n");
      out.write("        \t      Handsontable.Dom.addEvent(document.body, 'click', function (e) {\n");
      out.write("        \t  \n");
      out.write("        \t        var element = e.target || e.srcElement;\n");
      out.write("        \t  \n");
      out.write("        \t        if (element.nodeName == \"BUTTON\" && element.name == 'dump') {\n");
      out.write("        \t          var name = element.getAttribute('data-dump');\n");
      out.write("        \t          var instance = element.getAttribute('data-instance');\n");
      out.write("        \t          var hot = window[instance];\n");
      out.write("        \t          console.log('data of ' + name, hot.getData());\n");
      out.write("        \t        }\n");
      out.write("        \t      });\n");
      out.write("        \t    }\n");
      out.write("        \t  bindDumpButton(); */\n");
      out.write("\n");
      out.write("        \t});\n");
      out.write("\n");
      out.write("   \t\t </script>\n");
      out.write("        \n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
