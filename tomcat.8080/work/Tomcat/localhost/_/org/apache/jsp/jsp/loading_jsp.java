/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.57
 * Generated at: 2016-01-18 14:39:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class loading_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html xmlns:h=\"http://java.sun.com/jsf/html\">\n");
      out.write("<head>\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/bootstrap.min.css\">\n");
      out.write("<script src=\"../js/bootstrap.min.js\"></script>\n");
      out.write("<script src=\"../js/handsontable-master/dist/handsontable.full.js\"></script>\n");
      out.write("<script src=\"../js/spin.min.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" media=\"screen\"\n");
      out.write("\thref=\"../js/handsontable-master/dist/handsontable.full.css\">\n");
      out.write("<script src=\"../js/adamwdraper-Numeral-js-7487acb/min/numeral.min.js\"></script>\n");
      out.write("<script src=\"../js/moment.js\"></script>\n");
      out.write("<script\n");
      out.write("\tsrc=\"../js/handsontable-master/dist/zeroclipboard/ZeroClipboard.js\">\n");
      out.write("\t\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t<div id=\"jumbotron\">\n");
      out.write("\t\t");
      out.write("\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tvar opts = {\n");
      out.write("\t\tlines : 11 // The number of lines to draw\n");
      out.write("\t\t,\n");
      out.write("\t\tlength : 56 // The length of each line\n");
      out.write("\t\t,\n");
      out.write("\t\twidth : 31 // The line thickness\n");
      out.write("\t\t,\n");
      out.write("\t\tradius : 64 // The radius of the inner circle\n");
      out.write("\t\t,\n");
      out.write("\t\tscale : 1 // Scales overall size of the spinner\n");
      out.write("\t\t,\n");
      out.write("\t\tcorners : 1 // Corner roundness (0..1)\n");
      out.write("\t\t,\n");
      out.write("\t\tcolor : '#000' // #rgb or #rrggbb or array of colors\n");
      out.write("\t\t,\n");
      out.write("\t\topacity : 0.2 // Opacity of the lines\n");
      out.write("\t\t,\n");
      out.write("\t\trotate : 0 // The rotation offset\n");
      out.write("\t\t,\n");
      out.write("\t\tdirection : 1 // 1: clockwise, -1: counterclockwise\n");
      out.write("\t\t,\n");
      out.write("\t\tspeed : 1.1 // Rounds per second\n");
      out.write("\t\t,\n");
      out.write("\t\ttrail : 58 // Afterglow percentage\n");
      out.write("\t\t,\n");
      out.write("\t\tfps : 20 // Frames per second when using setTimeout() as a fallback for CSS\n");
      out.write("\t\t,\n");
      out.write("\t\tzIndex : 2e9 // The z-index (defaults to 2000000000)\n");
      out.write("\t\t,\n");
      out.write("\t\tclassName : 'spinner' // The CSS class to assign to the spinner\n");
      out.write("\t\t,\n");
      out.write("\t\ttop : '49%' // Top position relative to parent\n");
      out.write("\t\t,\n");
      out.write("\t\tleft : '50%' // Left position relative to parent\n");
      out.write("\t\t,\n");
      out.write("\t\tshadow : true // Whether to render a shadow\n");
      out.write("\t\t,\n");
      out.write("\t\thwaccel : false // Whether to use hardware acceleration\n");
      out.write("\t\t,\n");
      out.write("\t\tposition : 'absolute' // Element positioning\n");
      out.write("\t}\n");
      out.write("\tvar target = document.getElementById('jumbotron')\n");
      out.write("\tvar spinner = new Spinner(opts).spin(target);\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t//var checkStatusTimeout;\n");
      out.write("\n");
      out.write("\t/* function checkStatus(){\n");
      out.write("\t    $.ajax({\n");
      out.write("\t        type: \"GET\",\n");
      out.write("\t        url: \"./getstatus\",\n");
      out.write("\t        dataType: \"text\",\n");
      out.write("\t        contentType: \"application/json; charset=utf-8\",\n");
      out.write("\t        success: function(status){\n");
      out.write("\t            if (status == 'FINISHED'){\n");
      out.write("\t                clearTimeout(checkStatusTimeout);\n");
      out.write("\t                // execute whatever you want here\n");
      out.write("\t                $.get(\"/ooo\");\n");
      out.write("\t            }\n");
      out.write("\t        }\n");
      out.write("\t    });\n");
      out.write("\n");
      out.write("\t    checkStatusTimeout = window.setTimeout(\"checkStatus()\", 5000);\n");
      out.write("\t} */\n");
      out.write("</script>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
